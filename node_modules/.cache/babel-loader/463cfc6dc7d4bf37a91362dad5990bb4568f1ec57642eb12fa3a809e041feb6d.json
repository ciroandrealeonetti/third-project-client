{"ast":null,"code":"var _jsxFileName = \"/Users/ciroandrealeonetti/ironhack/projects/third-project-client/src/pages/ExcerciseList.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../contexts/auth.context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExcerciseList() {\n  _s();\n  const [excerciseList, setExcerciseList] = useState([]);\n  const {\n    loggedIn,\n    user,\n    logout\n  } = useContext(AuthContext);\n  const getExcercises = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5005/excercises`);\n      setExcerciseList(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getExcercises();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ExcerciseListPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), excerciseList.map(excersise => {\n      return (\n        /*#__PURE__*/\n        /*<Card\n          style={{ width: \"auto\", backgroundColor: \"white\", height: \"auto\" }}>\n          <Card.Body>\n            <div key={excersise._id} className=\"ExcerciseCard card\">\n              <Link to={`/excersiseList/${excersise._id}`}>\n                <h3>{excersise.name}</h3>\n              </Link>\n              <h4>Type: {excersise.type}</h4>\n              {loggedIn &&\n              <Link to={`/excerciseDetails/${excersise.name}`}>\n                <Button variant=\"primary\">Details</Button>\n              </Link> }\n            </div>\n          </Card.Body>\n        </Card>*/\n        _jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Card Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: \"Card Subtitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"#\",\n              children: \"Card Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"#\",\n              children: \"Another Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      );\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcerciseList, \"JdB6mUmoH7MWL1YnfJF/ML6Bu20=\");\n_c = ExcerciseList;\nexport default ExcerciseList;\nvar _c;\n$RefreshReg$(_c, \"ExcerciseList\");","map":{"version":3,"names":["axios","React","useEffect","useState","Link","Card","Button","useContext","AuthContext","ExcerciseList","excerciseList","setExcerciseList","loggedIn","user","logout","getExcercises","response","get","data","console","log","error","map","excersise","width"],"sources":["/Users/ciroandrealeonetti/ironhack/projects/third-project-client/src/pages/ExcerciseList.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../contexts/auth.context.js\";\n\nfunction ExcerciseList() {\n  const [excerciseList, setExcerciseList] = useState([]);\n  const { loggedIn, user, logout } = useContext(AuthContext);\n\n  const getExcercises = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5005/excercises`);\n      setExcerciseList(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getExcercises();\n  }, []);\n\n  return (\n    <div className=\"ExcerciseListPage\">\n      <h1>Exercises</h1>\n      {excerciseList.map((excersise) => {\n        return (\n          /*<Card\n            style={{ width: \"auto\", backgroundColor: \"white\", height: \"auto\" }}>\n            <Card.Body>\n              <div key={excersise._id} className=\"ExcerciseCard card\">\n                <Link to={`/excersiseList/${excersise._id}`}>\n                  <h3>{excersise.name}</h3>\n                </Link>\n                <h4>Type: {excersise.type}</h4>\n                {loggedIn &&\n                <Link to={`/excerciseDetails/${excersise.name}`}>\n                  <Button variant=\"primary\">Details</Button>\n                </Link> }\n              </div>\n            </Card.Body>\n          </Card>*/\n\n          <Card style={{ width: '18rem' }}>\n      <Card.Body>\n        <Card.Title>Card Title</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\n        <Card.Text>\n          Some quick example text to build on the card title and make up the\n          bulk of the card's content.\n        </Card.Text>\n        <Card.Link href=\"#\">Card Link</Card.Link>\n        <Card.Link href=\"#\">Another Link</Card.Link>\n      </Card.Body>\n    </Card>\n\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ExcerciseList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,6BAA6B;AAAC;AAE1D,SAASC,aAAa,GAAG;EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAES,QAAQ;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC;EAE1D,MAAMO,aAAa,GAAG,YAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,kCAAiC,CAAC;MACpEN,gBAAgB,CAACK,QAAQ,CAACE,IAAI,CAAC;MAC/BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACda,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAChC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,EACjBL,aAAa,CAACY,GAAG,CAAEC,SAAS,IAAK;MAChC;QAAA;QACE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAEU,QAAC,IAAI;UAAC,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAA,uBACpC,QAAC,IAAI,CAAC,IAAI;YAAA,wBACR,QAAC,IAAI,CAAC,KAAK;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAwB,eACnC,QAAC,IAAI,CAAC,QAAQ;cAAC,SAAS,EAAC,iBAAiB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA8B,eACxE,QAAC,IAAI,CAAC,IAAI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAGE,eACZ,QAAC,IAAI,CAAC,IAAI;cAAC,IAAI,EAAC,GAAG;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAsB,eACzC,QAAC,IAAI,CAAC,IAAI;cAAC,IAAI,EAAC,GAAG;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAyB;UAAA;YAAA;YAAA;YAAA;UAAA;QAClC;UAAA;UAAA;UAAA;QAAA;MACP;IAGL,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAxDQf,aAAa;AAAA,KAAbA,aAAa;AA0DtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}